syntax = "proto3";

package xiaohongshu.v1;  // namespace

import "google/api/annotations.proto";

option go_package = "kratos-bbs-demo/api/xiaohongshu/v1;v1";  // code generate 在 xx 目录下


// 服务 - 小红书
service Xiaohongshu {

  // 用户相关
  rpc Login(LoginRequest) returns (UserReply)  {
    option (google.api.http) = {
      post: "/api/user/login",
      body: "*",
    };
  }

  rpc Register(RegisterRequest) returns (UserReply)  {
    option (google.api.http) = {
      post: "/api/users",
      body: "*",
    };
  }

  rpc GetCurrentUser(GetCurrentUserRequest) returns (UserReply)  {
    option (google.api.http) = {
      get: "/api/user",
    };
  }

  rpc UpdatetUser(UpdateUserRequest) returns (UserReply)  {
    option (google.api.http) = {
      put: "/api/user",
      body: "*",
    };
  }

  // 个人简介相关
  rpc GetProfile(GetProfileRequest) returns (ProfileReply)  {
    option (google.api.http) = {
      get: "/api/profiles/{username}",
    };
  }

  // 关注 
  rpc FollowUser(FollowUserRequest) returns (ProfileReply)  {
    option (google.api.http) = {
      post: "/api/profiles/{username}/follow",
      body: "*",
    };
  }

  rpc UnFollowUser(UnFollowUserRequest) returns (ProfileReply)  {
    option (google.api.http) = {
      delete: "/api/profiles/{username}/follow",
    };
  }

  // 帖子
  rpc ListArticles(ListArticlesRequest) returns (MultipleArticlesReply)  {
    option (google.api.http) = {
      get: "/api/articles",
    };
  }


  rpc FeedArticles(FeedArticlesRequest) returns (MultipleArticlesReply)  {
    option (google.api.http) = {
      get: "/api/articles/feed",
    };
  }

  rpc GetArticle(GetArticleRequest) returns (SingleArticleReply)  {
    option (google.api.http) = {
      get: "/api/articles/{slug}",
    };
  }

  rpc CreateArticle(CreateArticleRequest) returns (SingleArticleReply)  {
    option (google.api.http) = {
      post: "/api/articles",
      body: "*",
    };
  }

  rpc UpdateArticle(UpdateArticleRequest) returns (SingleArticleReply)  {
    option (google.api.http) = {
      put: "/api/articles/{slug}",
      body: "*",
    };
  }

  rpc DeleteArticle(DeleteArticleRequest) returns (DeleteArticleReply)  {
    option (google.api.http) = {
      delete: "/api/articles/{slug}",
    };
  }

  // 评论
  rpc AddComments(AddCommentsRequest) returns (SingleCommentReply)  {
    option (google.api.http) = {
      post: "/api/articles/{slug}/comments",
      body: "*",
    };
  }

  
  rpc GetComments(GetCommentsRequest) returns (MultipleCommentsReply)  {
    option (google.api.http) = {
      get: "/api/articles/{slug}/comments",
    };
  }

  rpc DeleteComments(DeleteCommentsRequest) returns (DeleteCommentsReply)  {
    option (google.api.http) = {
      delete: "/api/articles/{slug}/comments/{id}",
    };
  }

  // 帖子 赞同/不赞同
  rpc FavouriteArticle(FavouriteArticleRequest) returns (SingleArticleReply)  {
    option (google.api.http) = {
      post: "/api/articles/{slug}/favourite",
      body: "*",
    };
  }

  rpc UnFavouriteArticle(UnFavouriteArticleRequest) returns (SingleArticleReply)  {
    option (google.api.http) = {
      delete: "/api/articles/{slug}/favourite",
    };
  }

  // 标签
  rpc GetTags(GetTagsRequest) returns (TagListReply) {
    option (google.api.http) = {
      get: "/api/tags",
    };
  }
}


// 请求和响应消息

// 用户相关

message LoginRequest {

  message User {
    string email = 1;
    string password = 2;
  }

  User user = 1;
}
  
message  RegisterRequest {
  message User {
    string username = 1;
    string email = 2;
    string password = 3;
  }
  User user = 1;
}

message UpdateUserRequest {

  message User {
      string email = 1;
      string bio = 2;
      string image = 3;
  }

  User user = 1;
}

message GetCurrentUserRequest {}

message UserReply {

  message User {
      string email = 1;
      string token = 2;
      string username = 3;
      string bio = 4;
      string image = 5;
  }
  
  User user = 1;
}


// 个人简介相关

message GetProfileRequest {
  string username = 1;
}

message ProfileReply {

  message Profile {
      string username = 1;
      string bio = 2;
      string image = 3;
      bool following = 4;
  }

  Profile profile = 1;
}

message FollowUserRequest {
  string username = 1;
}
message UnFollowUserRequest {
  string username = 1;
}



// 帖子 feed 流、清单

message ListArticlesRequest {
  string tag = 1;
  string author = 2;
  string favorited = 3;
  int64 limit = 4;
  int64 offset = 5;
}

message FeedArticlesRequest {
  int64 limit = 1;
  int64 offset = 2;
}

message MultipleArticlesReply {

  message Author {
      string username = 1;
      string bio = 2;
      string image = 3;
      bool following = 4;
  }

  message Articles {
      string slug = 1;
      string title = 2;
      string description = 3;
      string body = 4;
      repeated string tagList = 5;
      string createdAt = 6;
      string updatedAt = 7;
      bool favorited = 8;
      uint32 favoritesCount = 9;
      Author author = 10;
  }

  repeated Articles articles = 1;
  uint32 articlesCount = 2;
}


// 帖子 增删改查

message CreateArticleRequest {

  message Article {
      string title = 1;
      string description = 2;
      string body = 3;
      repeated string tagList = 4;
  }

  Article article = 1;
}

message GetArticleRequest {
  string slug = 1;
}

message UpdateArticleRequest {

  message Article {
      string title = 1;
      string description = 2;
      string body = 3;
      repeated string tagList = 4;
  }

  Article article = 1;
  string slug = 2;
}

message SingleArticleReply {

  message Author {
      string username = 1;
      string bio = 2;
      string image = 3;
      bool following = 4;
  }

  message Article {
      string slug = 1;
      string title = 2;
      string description = 3;
      string body = 4;
      repeated string tagList = 5;
      string createdAt = 6;
      string updatedAt = 7;
      bool favorited = 8;
      uint32 favoritesCount = 9;
      Author author = 10;
  }

  Article article = 1;
}

message DeleteArticleRequest {
  string slug = 1;
}

message DeleteArticleReply {
  string slug = 1;
}


// 帖子 赞同、不赞同
message FavouriteArticleRequest {
  string slug = 1;
}
message UnFavouriteArticleRequest {
  string slug = 1;
}


// 评论相关

message AddCommentsRequest {

  message Comment {
      string body = 1;
  }

  Comment comment = 1;
  string slug = 2;
}

message SingleCommentReply {

  message Author {
      string username = 1;
      string bio = 2;
      string image = 3;
      bool following = 4;
  }

  message Comment {
      uint32 id = 1;
      string createdAt = 2;
      string updatedAt = 3;
      string body = 4;
      Author author = 5;
  }

  Comment comment = 1;
}


message GetCommentsRequest {
  string slug = 1;
}

message MultipleCommentsReply {

  message Author {
      string username = 1;
      string bio = 2;
      string image = 3;
      bool following = 4;
  }

  message Comments {
      uint32 id = 1;
      string createdAt = 2;
      string updatedAt = 3;
      string body = 4;
      Author author = 5;
  }

  repeated Comments comments = 1;
}

message DeleteCommentsRequest {
  string slug = 1;
  int64 id = 2;
}

message DeleteCommentsReply {}


// 标签相关

message GetTagsRequest {}
message TagListReply {
  repeated string tags = 1;
}
